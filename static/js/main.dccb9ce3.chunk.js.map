{"version":3,"sources":["components/Searchbar/Searchbar.js","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","trim","props","onSubmit","toLowerCase","toast","error","toastId","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Config","api","fetchImage","searchQuery","page","axios","get","then","response","status","data","Promise","reject","Error","ImageGalleryItem","src","alt","source","data-source","Button","onClick","Loader","color","height","width","Status","ImageGallery","images","totalHits","handleRequest","nextPage","pixabayAPI","hits","prevState","catch","finally","pageSmoothScroll","handleLoadMoreBtn","handleModal","target","toggleModal","isOpen","dataset","window","scrollTo","top","document","documentElement","scrollHeight","behavior","showError","message","showInfo","info","prevProps","prevQuery","nextQuery","prevPage","length","map","tags","webformatURL","largeImageURL","shortid","generate","Modal","handleKeyDown","code","handleClose","handleBackdropClick","addEventListener","removeEventListener","modalImg","modalAlt","App","showModal","closeOnClick","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dccb9ce3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({\n      imageName: event.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { imageName } = this.state;\n\n    if (imageName.trim() === '') {\n      toast.error('Пустое поле поиска.', { toastId: 'searchbar' });\n      return;\n    }\n\n    this.props.onSubmit(imageName.toLowerCase());\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\" onSubmit={this.handleSubmit}>\n        <form className=\"SearchForm\">\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.imageName}\n            onChange={this.handleNameChange}\n          />\n\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst Config = {\n  KEY: '19294514-cad9d9492229c8304ad27e22b',\n  PER_PAGE: 10,\n};\n\nfunction fetchImage(searchQuery, page = 1) {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${Config.KEY}&image_type=photo&orientation=horizontal&per_page=${Config.PER_PAGE}`,\n    )\n    .then(response => {\n      if (response.status === 200) {\n        return response.data;\n      }\n\n      return Promise.reject(new Error(`Images are not found.`));\n    });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ src, alt, source }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        src={src}\n        alt={alt}\n        data-source={source}\n      />\n    </li>\n  );\n}\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Button({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ReactLoader from 'react-loader-spinner';\n\nfunction Loader() {\n  return <ReactLoader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\n}\n\nexport default Loader;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport pixabayAPI from '../../services/pixabay-api';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport LoadMoreButton from '../Button';\nimport Loader from '../Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    totalHits: 0,\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.searchQuery;\n    const nextQuery = this.props.searchQuery;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: Status.PENDING, page: 1 });\n      this.handleRequest(nextQuery);\n      return;\n    }\n\n    if (prevPage !== nextPage) {\n      this.setState({ status: Status.PENDING });\n      this.handleRequest(nextQuery, nextPage);\n      return;\n    }\n  }\n\n  handleRequest = (searchQuery, nextPage) => {\n    pixabayAPI\n      .fetchImage(searchQuery, nextPage)\n      .then(({ hits, totalHits }) =>\n        this.setState(prevState => {\n          if (nextPage > 1) {\n            hits = [...prevState.images, ...hits];\n          }\n\n          return {\n            images: hits,\n            totalHits,\n            status: Status.RESOLVED,\n          };\n        }),\n      )\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => {\n        this.setState({ status: Status.IDLE });\n        this.pageSmoothScroll();\n      });\n  };\n\n  handleLoadMoreBtn = () => {\n    this.setState(prevState => {\n      return {\n        page: prevState.page + 1,\n      };\n    });\n  };\n\n  handleModal = e => {\n    if (e.target !== e.currentTarget) {\n      this.props.toggleModal({\n        isOpen: true,\n        src: e.target.dataset.source,\n        alt: e.target.alt,\n      });\n    }\n  };\n\n  pageSmoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  showError = error => {\n    toast.error(error.message, { toastId: 'error' });\n  };\n\n  showInfo = () => {\n    toast.info('Images are not found.', { toastId: 'resolved' });\n  };\n\n  render() {\n    const { images, error, status, totalHits } = this.state;\n\n    if (status === Status.PENDING) {\n      return <Loader />;\n    }\n\n    if (status === Status.REJECTED) {\n      this.showError(error);\n    }\n\n    if (status === Status.RESOLVED || status === Status.IDLE) {\n      if (!images.length && status !== Status.IDLE) {\n        this.showInfo();\n        return null;\n      }\n\n      return (\n        <>\n          <ul className=\"ImageGallery\" onClick={this.handleModal}>\n            {images.map(({ tags, webformatURL, largeImageURL }) => (\n              <ImageGalleryItem\n                key={shortid.generate()}\n                src={webformatURL}\n                alt={tags}\n                source={largeImageURL}\n              />\n            ))}\n          </ul>\n\n          {images.length < totalHits && (\n            <LoadMoreButton onClick={this.handleLoadMoreBtn} />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.handleClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => {\n    this.props.toggleModal({\n      isOpen: false,\n      src: '',\n      alt: '',\n    });\n  };\n\n  render() {\n    const { modalImg, modalAlt } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={modalImg} alt={modalAlt} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  modalImg: PropTypes.string.isRequired,\n  modalAlt: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    showModal: false,\n    modalImg: '',\n    modalAlt: '',\n  };\n\n  onSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  toggleModal = ({ isOpen, src, alt }) => {\n    this.setState({\n      showModal: isOpen,\n      modalImg: src,\n      modalAlt: alt,\n    });\n  };\n\n  // проверка пропсов\n\n  render() {\n    const { searchQuery, showModal, modalImg, modalAlt } = this.state;\n\n    return (\n      <div className=\"App\">\n        <ToastContainer closeOnClick autoClose={2000} />\n\n        <Searchbar onSubmit={this.onSubmit} />\n\n        <ImageGallery\n          searchQuery={searchQuery}\n          toggleModal={this.toggleModal}\n        />\n\n        {showModal && (\n          <Modal\n            toggleModal={this.toggleModal}\n            modalImg={modalImg}\n            modalAlt={modalAlt}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}